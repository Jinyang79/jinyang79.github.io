import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.7404742a.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"components/Typer/typer.md","lastUpdated":1680266397000}'),p={name:"components/Typer/typer.md"},o=l(`<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">strings</span><span style="color:#ADBAC7;">: [], </span><span style="color:#768390;">// 要打字的字符串数组</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">stringsElement</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 包含字符串子元素的元素的 ID</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">typeSpeed</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 打字速度，以毫秒为单位</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">startDelay</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 打字前的延迟时间，以毫秒为单位</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">backSpeed</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 回退速度，以毫秒为单位</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">smartBackspace</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 只回退与前一个字符串不匹配的部分</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">shuffle</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 是否打乱字符串</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">backDelay</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">700</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 回退前的等待时间，以毫秒为单位</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">fadeOut</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 是否淡出而不是回退</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">fadeOutClass</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;typed-fade-out&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 淡出动画的 CSS 类</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">fadeOutDelay</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">500</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 淡出延迟时间，以毫秒为单位</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">loop</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 是否循环字符串</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">loopCount</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">Infinity</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 循环次数</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">showCursor</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 是否显示光标</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">cursorChar</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;|&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 光标字符</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">autoInsertCss</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 是否将 CSS 插入到 HTML &lt;head&gt; 中</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">attr</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 用于打字的属性，例如输入占位符、值或 HTML 文本</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">bindInputFocusEvents</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 如果元素是文本输入，则绑定到焦点和模糊</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">contentType</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;html&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;">// 内容类型，&#39;html&#39; 或 &#39;null&#39; 表示纯文本</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onBegin</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 开始打字前</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onComplete</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 所有打字完成后</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">preStringTyped</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">arrayPos</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 每个字符串打字前</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onStringTyped</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">arrayPos</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 每个字符串打字后</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onLastStringBackspaced</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 循环时，在最后一个字符串被删除后</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onTypingPaused</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">arrayPos</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 打字被暂停时</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onTypingResumed</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">arrayPos</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 打字被恢复后</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onReset</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 重置后</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onStop</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">arrayPos</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 停止打字后</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onStart</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">arrayPos</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 开始打字后</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">onDestroy</span><span style="color:#ADBAC7;">: (</span><span style="color:#F69D50;">self</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {}, </span><span style="color:#768390;">// 销毁后</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre></div>`,1),e=[o];function t(c,r,y,A,D,C){return n(),a("div",null,e)}const i=s(p,[["render",t]]);export{F as __pageData,i as default};

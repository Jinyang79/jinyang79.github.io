import{_ as s,o as n,c as a,a as l}from"./app.5b5c79b2.js";const C=JSON.parse('{"title":"前端导入导出 by SheetJs","description":"","frontmatter":{},"headers":[],"relativePath":"blog/everyday/util-xlsx.md","lastUpdated":1679813736000}'),p={name:"blog/everyday/util-xlsx.md"},o=l(`<h1 id="前端导入导出-by-sheetjs" tabindex="-1">前端导入导出 by SheetJs <a class="header-anchor" href="#前端导入导出-by-sheetjs" aria-hidden="true">#</a></h1><h2 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-hidden="true">#</a></h2><p>我的项目在很多地方都需要实现前端导入导出功能，为了使用方便，并且减少冗余代码，使代码更合理、更优雅，所以对 SheetJs 进行封装。</p><p>需要实现的是：</p><ul><li>导出：将接口返回的<code>json</code>数据转化成<code>xlsx</code>格式。</li><li>导入：将<code>xlsx</code>格式转化成需要的<code>json</code>数据。</li></ul><h2 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-hidden="true">#</a></h2><h3 id="导出" tabindex="-1">导出 <a class="header-anchor" href="#导出" aria-hidden="true">#</a></h3><p>思路： 拿到 key 是表头的对象数组，通过<code>json_to_sheet</code>将 JS 对象数组转换为工作表。</p><ol><li>我们需要传入接口返回结果（res）的键和表头映射关系的二维数组（mapKeyToHeader）；</li><li>把 mapKeyToHeader 转化成<code>Map</code>结构，使用 <code>for..of</code>或者 <code>forEach()</code>方法迭代 headerMap，把 res 的键对应的值赋值给表头；</li><li>调用<code>json_to_sheet</code> 等 api，转换并下载<code>xlsx</code>文件；</li></ol><h4 id="jsontoxlsx-ts" tabindex="-1">jsonToXlsx.ts <a class="header-anchor" href="#jsontoxlsx-ts" aria-hidden="true">#</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { message } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;antd&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> XLSX </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;xlsx&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">JsonToXlsxProps</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> 接口返回结果</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@type</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{Record&lt;string, any&gt;[]}</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">res</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Record</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">any</span><span style="color:#ADBAC7;">&gt;[];</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> 文件名/第一个 sheet 名</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@type</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{string}</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">fileName</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> 映射 key 到 表头</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@type</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{[string, string][]}</span><span style="color:#768390;"> [key, 表头]</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">mapKeyToHeader</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">][];</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> json =&gt; xlsx (导出)</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@export</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{JsonToXlsxProps}</span><span style="color:#768390;"> {</span></span>
<span class="line"><span style="color:#768390;"> *   res,</span></span>
<span class="line"><span style="color:#768390;"> *   fileName,</span></span>
<span class="line"><span style="color:#768390;"> *   mapKeyToHeader</span></span>
<span class="line"><span style="color:#768390;"> * }</span></span>
<span class="line"><span style="color:#768390;"> */</span></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">jsonToXlsx</span><span style="color:#ADBAC7;">({ </span><span style="color:#F69D50;">res</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fileName</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">mapKeyToHeader</span><span style="color:#ADBAC7;"> }</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">JsonToXlsxProps</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">void</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">headerMap</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Map</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">&gt;(mapKeyToHeader);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">exportData</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> res.</span><span style="color:#DCBDFB;">map</span><span style="color:#ADBAC7;">((</span><span style="color:#F69D50;">item</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">dataItem</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Record</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    headerMap.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">((</span><span style="color:#F69D50;">value</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">key</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">      dataItem[value] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> item[key];</span></span>
<span class="line"><span style="color:#ADBAC7;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> dataItem;</span></span>
<span class="line"><span style="color:#ADBAC7;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">worksheet</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">XLSX</span><span style="color:#ADBAC7;">.utils.</span><span style="color:#DCBDFB;">json_to_sheet</span><span style="color:#ADBAC7;">(exportData);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">workbook</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">XLSX</span><span style="color:#ADBAC7;">.utils.</span><span style="color:#DCBDFB;">book_new</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">XLSX</span><span style="color:#ADBAC7;">.utils.</span><span style="color:#DCBDFB;">book_append_sheet</span><span style="color:#ADBAC7;">(workbook, worksheet, fileName);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">XLSX</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">writeFile</span><span style="color:#ADBAC7;">(workbook, </span><span style="color:#96D0FF;">\`\${</span><span style="color:#ADBAC7;">fileName</span><span style="color:#96D0FF;">}.xlsx\`</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (error) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    message.</span><span style="color:#DCBDFB;">error</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">\`导出失败：\${</span><span style="color:#ADBAC7;">error</span><span style="color:#96D0FF;">}\`</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h4><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#768390;">// 请求获取 result</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> { </span><span style="color:#6CB6FF;">result</span><span style="color:#ADBAC7;"> } </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> api;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCBDFB;">jsonToXlsx</span><span style="color:#ADBAC7;">({</span></span>
<span class="line"><span style="color:#ADBAC7;">  res: result,</span></span>
<span class="line"><span style="color:#ADBAC7;">  fileName: </span><span style="color:#96D0FF;">&#39;员工信息&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">  mapKeyToHeader: [</span></span>
<span class="line"><span style="color:#ADBAC7;">    [</span><span style="color:#96D0FF;">&#39;name&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;姓名&#39;</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">    [</span><span style="color:#96D0FF;">&#39;age&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;年龄&#39;</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">    [</span><span style="color:#96D0FF;">&#39;address&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;地址&#39;</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">  ],</span></span>
<span class="line"><span style="color:#ADBAC7;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="导入" tabindex="-1">导入 <a class="header-anchor" href="#导入" aria-hidden="true">#</a></h3><p>思路：基于 antd 的 Upload 获取 file 对象，通过<code>sheet_to_json</code>将工作表转换为 JS 对象数组</p><ol><li>封装 xlsxToJson 方法，调用<code>sheet_to_json</code> 等 api，得到表格数据（data）；</li><li>封装 CustomUpload 组件，通过 Upload 的 <code>customRequest</code> api 获取 file 对象；</li></ol><h4 id="xlsxtojson-ts" tabindex="-1">xlsxToJson.ts <a class="header-anchor" href="#xlsxtojson-ts" aria-hidden="true">#</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> XLSX </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;xlsx&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { message } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;antd&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">XlsxToJsonProps</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> file 对象</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@type</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{File}</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">file</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">File</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> 成功回调函数 data: 表头为 key 的 list</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">onSuccess</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">data</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Record</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">&gt;[]) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">void</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> xlsx=&gt; json  (导入)</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@export</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{XlsxToJsonProps}</span><span style="color:#768390;"> {</span></span>
<span class="line"><span style="color:#768390;"> *     file,</span></span>
<span class="line"><span style="color:#768390;"> *     onSuccess</span></span>
<span class="line"><span style="color:#768390;"> *   }</span></span>
<span class="line"><span style="color:#768390;"> */</span></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">xlsxToJson</span><span style="color:#ADBAC7;">({ </span><span style="color:#F69D50;">file</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">onSuccess</span><span style="color:#ADBAC7;"> }</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">XlsxToJsonProps</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">void</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">let</span><span style="color:#ADBAC7;"> data</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Record</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">&gt;[] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 通过 FileReader 对象读取文件</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">fileReader</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">FileReader</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 以二进制方式打开文件</span></span>
<span class="line"><span style="color:#ADBAC7;">  fileReader.</span><span style="color:#DCBDFB;">readAsBinaryString</span><span style="color:#ADBAC7;">(file);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  fileReader.</span><span style="color:#DCBDFB;">onload</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">event</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ProgressEvent</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">FileReader</span><span style="color:#ADBAC7;">&gt;) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">result</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> event.target?.result;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">workbook</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">XLSX</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">read</span><span style="color:#ADBAC7;">(result, { type: </span><span style="color:#96D0FF;">&#39;binary&#39;</span><span style="color:#ADBAC7;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">sheet</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> workbook.Sheets) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (</span><span style="color:#6CB6FF;">Object</span><span style="color:#ADBAC7;">.</span><span style="color:#6CB6FF;">prototype</span><span style="color:#ADBAC7;">.hasOwnProperty.</span><span style="color:#DCBDFB;">call</span><span style="color:#ADBAC7;">(workbook.Sheets, sheet)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">          data </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data.</span><span style="color:#DCBDFB;">concat</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">XLSX</span><span style="color:#ADBAC7;">.utils.</span><span style="color:#DCBDFB;">sheet_to_json</span><span style="color:#ADBAC7;">(workbook.Sheets[sheet]));</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#DCBDFB;">onSuccess</span><span style="color:#ADBAC7;">(data);</span></span>
<span class="line"><span style="color:#ADBAC7;">    } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (error) {</span></span>
<span class="line"><span style="color:#ADBAC7;">      message.</span><span style="color:#DCBDFB;">error</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">\`导入失败：\${</span><span style="color:#ADBAC7;">error</span><span style="color:#96D0FF;">}\`</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">  };</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="customupload-tsx" tabindex="-1">CustomUpload.tsx <a class="header-anchor" href="#customupload-tsx" aria-hidden="true">#</a></h4><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> React </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { UploadOutlined } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;@ant-design/icons&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { Button, Upload } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;antd&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { xlsxToJson } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;utils/xlsx&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">CustomUploadProps</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> 上传按钮名</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@type</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{string}</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">uploadBtnName</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> 成功回调函数 data: 表头为 key 的 list</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">onSuccess</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">data</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Record</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">&gt;[]) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">void</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@description</span><span style="color:#768390;"> 自定义 Upload (by xlsxToJson)</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@export</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{CustomUploadProps}</span><span style="color:#768390;"> {</span></span>
<span class="line"><span style="color:#768390;"> *     uploadBtnName,</span></span>
<span class="line"><span style="color:#768390;"> *     onSuccess</span></span>
<span class="line"><span style="color:#768390;"> *   }</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@returns</span><span style="color:#768390;"> </span><span style="color:#F69D50;">{*}</span><span style="color:#768390;">  {JSX.Element}</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@tips</span><span style="color:#768390;"> 通过 antd Upload 获取 file 对象，然后通过 xlsxToJson;</span></span>
<span class="line"><span style="color:#768390;"> *       使用 Upload customRequest api 获取 file 对象;</span></span>
<span class="line"><span style="color:#768390;"> */</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">CustomUpload</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ({ </span><span style="color:#F69D50;">uploadBtnName</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">onSuccess</span><span style="color:#ADBAC7;"> }</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">CustomUploadProps</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">JSX</span><span style="color:#ADBAC7;">.</span><span style="color:#F69D50;">Element</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">Upload</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#6CB6FF;">accept</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;.xlsx, .xls&#39;</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#6CB6FF;">showUploadList</span><span style="color:#F47067;">={</span><span style="color:#6CB6FF;">false</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#6CB6FF;">customRequest</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">({ </span><span style="color:#F69D50;">file</span><span style="color:#ADBAC7;"> }) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">xlsxToJson</span><span style="color:#ADBAC7;">({</span></span>
<span class="line"><span style="color:#ADBAC7;">          file: file </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">File</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">          onSuccess,</span></span>
<span class="line"><span style="color:#ADBAC7;">        });</span></span>
<span class="line"><span style="color:#ADBAC7;">      }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">    &gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">Button</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">icon</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">UploadOutlined</span><span style="color:#ADBAC7;"> /&gt;</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;">&gt;</span><span style="color:#F47067;">{</span><span style="color:#ADBAC7;">uploadBtnName</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">Button</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">Upload</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">CustomUpload;</span></span>
<span class="line"></span></code></pre></div><h4 id="使用-1" tabindex="-1">使用 <a class="header-anchor" href="#使用-1" aria-hidden="true">#</a></h4><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">  &lt;</span><span style="color:#8DDB8C;">CustomUpload</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">uploadBtnName</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;上传员工信息&#39;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">onSuccess</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">      console.</span><span style="color:#DCBDFB;">log</span><span style="color:#ADBAC7;">(data); </span><span style="color:#768390;">// 表格的数据</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#768390;">// 发起请求</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#768390;">// ...</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">  /&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><blockquote><p><a href="https://github.com/SheetJS/sheetjs" target="_blank" rel="noreferrer">https://github.com/SheetJS/sheetjs</a></p><p><a href="https://ant.design/components/upload-cn/" target="_blank" rel="noreferrer">https://ant.design/components/upload-cn/</a></p></blockquote>`,24),e=[o];function t(c,r,y,A,D,B){return n(),a("div",null,e)}const F=s(p,[["render",t]]);export{C as __pageData,F as default};

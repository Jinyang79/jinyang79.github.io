import{_ as s,o as a,c as e,a as n}from"./app.5b5c79b2.js";const y=JSON.parse('{"title":"React 项目中引入 CDN","description":"","frontmatter":{},"headers":[],"relativePath":"blog/everyday/cdn-in-react.md","lastUpdated":1679813736000}'),t={name:"blog/everyday/cdn-in-react.md"},o=n(`<h1 id="react-项目中引入-cdn" tabindex="-1">React 项目中引入 CDN <a class="header-anchor" href="#react-项目中引入-cdn" aria-hidden="true">#</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-hidden="true">#</a></h2><p>我在项目中需要将<code>json</code>文件和<code>xlsx</code>文件相互转化，所以使用第三方库 <a href="https://github.com/SheetJS/sheetjs" target="_blank" rel="noreferrer">SheetJS</a> 来实现需求，但是项目一开始使用<code>npm</code>安装<code>xlsx</code>，通过<code>webpack-bundle-analyzer</code>分析，<code>xlsx</code>打包后的产物相对较大（如下图）。</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112271745477.png" alt="image-20211227174544242"></p><h2 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-hidden="true">#</a></h2><p>为了减小项目<code>webpack</code>打包后产物的 size，因此选择以<code>CDN</code>的方式引入<code>xlsx</code>，<strong>并且不能影响我们在项目中通过<code>ESM</code>导入的方式使用</strong>，所以通过配置 <a href="https://www.webpackjs.com/configuration/externals/" target="_blank" rel="noreferrer">webpack externals</a> 来实现我们的需求。</p><p><strong>index.html</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">script</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">src</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;https://cdn.jsdelivr.net/npm/xlsx@0.17.4/dist/xlsx.full.min.js&quot;</span><span style="color:#ADBAC7;">&gt;&lt;/</span><span style="color:#8DDB8C;">script</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>webpack.config.js</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F69D50;">externals</span><span style="color:#ADBAC7;">: {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">xlsx</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;XLSX&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre></div><p>这样下面展示的代码就可以正常运行：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> XLSX </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;xlsx&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span></code></pre></div><p>优化后，打包体积减少了约 300+ kb 如下图</p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112282025083.png" alt="image-20211228202507055" style="zoom:50%;"><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><blockquote><p><a href="https://www.webpackjs.com/configuration/externals/" target="_blank" rel="noreferrer">https://www.webpackjs.com/configuration/externals/</a></p></blockquote>`,16),c=[o];function l(p,r,d,i,h,g){return a(),e("div",null,c)}const u=s(t,[["render",l]]);export{y as __pageData,u as default};

import{_ as s,o as n,c as e,a,b as t}from"./app.ed2a374b.js";const A=JSON.parse('{"title":"AntD 4.x 升级记录","description":"","frontmatter":{},"headers":[],"relativePath":"blog/everyday/antd-upgrade-log.md","lastUpdated":1679813736000}'),p={name:"blog/everyday/antd-upgrade-log.md"},o=a(`<h1 id="antd-4-x-升级记录" tabindex="-1">AntD 4.x 升级记录 <a class="header-anchor" href="#antd-4-x-升级记录" aria-hidden="true">#</a></h1><p>通过官方提供的 codemod cli 工具 <a href="https://github.com/ant-design/codemod-v4" target="_blank" rel="noreferrer">@ant-design/codemod-v4</a> 自动升级到 v4 版本。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#768390;"># 通过 npx 直接运行</span></span>
<span class="line"><span style="color:#F69D50;">npx</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">-p</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">@ant-design/codemod-v4</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">antd4-codemod</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">src</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 或者全局安装</span></span>
<span class="line"><span style="color:#768390;"># 使用 npm</span></span>
<span class="line"><span style="color:#F69D50;">npm</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">i</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">-g</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">@ant-design/codemod-v4</span></span>
<span class="line"><span style="color:#768390;"># 或者使用 yarn</span></span>
<span class="line"><span style="color:#F69D50;">yarn</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">global</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">add</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">@ant-design/codemod-v4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 运行</span></span>
<span class="line"><span style="color:#F69D50;">antd4-codemod</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">src</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723071.png" alt="image-20210506144156350"></p><p>升级完这些依赖项后，<strong>工具自动升级就完成啦 🎉。</strong></p><p>需要注意的两点是：</p><ul><li><strong>antd v4 版本的样式相对于 v3 有部分改动，如果在项目中修改过 antd 样式，要记得调整过来。</strong></li><li><strong>升级工具会帮你迁移到 antd v4，废弃的组件会通过 <code>@ant-design/compatible</code> 这个包引入并保持运行，不会影响组件使用，但是会在 dev server 抛出 warning，为了保持系统的整体性，还是建议手动迁移。</strong></li></ul><h2 id="css-调整" tabindex="-1">css 调整 <a class="header-anchor" href="#css-调整" aria-hidden="true">#</a></h2><h3 id="icon" tabindex="-1">Icon <a class="header-anchor" href="#icon" aria-hidden="true">#</a></h3><p><code>@ant-design/compatible</code> 引入的老版本 Icon 组件，icon 将从 i 标签修改为 span 标签</p><p>3.x</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723880.png" alt="image-20210701135747119"></p><p>4.x</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723746.png" alt="image-20210701135846263"></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#ADBAC7;">--- </span><span style="color:#8DDB8C;">i</span><span style="color:#6CB6FF;">.trigger</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#F47067;">+++</span><span style="color:#8DDB8C;">span</span><span style="color:#6CB6FF;">.trigger</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="form" tabindex="-1">Form <a class="header-anchor" href="#form" aria-hidden="true">#</a></h3><p>从 <code>@ant-design/compatible</code> 引入的老版本 Form 组件，样式类名会从 <code>.ant-form</code> 变成 <code>.ant-legacy-form</code>，如果你对其进行了样式覆盖，也需要相应修改。</p><p><strong>注意</strong>：之前的样式也不要改，复制一份，等手动更新完后，再去除</p><h3 id="datepicker" tabindex="-1">DatePicker <a class="header-anchor" href="#datepicker" aria-hidden="true">#</a></h3><p>DatePicker 进行了重写，样式类名结构都有变化</p><p><code>.ant-calendar-picker</code> 变成 <code>.ant-picker</code></p><h3 id="pagination" tabindex="-1">Pagination <a class="header-anchor" href="#pagination" aria-hidden="true">#</a></h3><blockquote><p>Pagination 自 <code>4.1.0</code> 起大于 50 条数据默认会展示 <code>pageSize</code> 切换器，这条规则同样会运用于 Table 上。</p></blockquote>`,23),l=t("p",{false:""},"showSizeChanger=",-1),c=a(`<h2 id="dev-server-warning" tabindex="-1">dev server warning <a class="header-anchor" href="#dev-server-warning" aria-hidden="true">#</a></h2><h3 id="icon-1" tabindex="-1">Icon <a class="header-anchor" href="#icon-1" aria-hidden="true">#</a></h3><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723211.png" alt="image-20210629151020576"></p><p>项目中使用了 <code>&lt;Icon type={type} /&gt;</code> 会转化成 <code>&lt;LegacyIcon type={type} /&gt;</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { Icon </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> LegacyIcon } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;@ant-design/compatible&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">// &lt;LegacyIcon type={type} /&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>注意：升级之后一定要修改它，不然会全量引入 svg 图标文件，导致增加了打包产物的 size。</strong></p><p>使用新版 <code>Icon</code> 按需引入的方式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { LaptopOutlined } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;@ant-design/icons&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span></code></pre></div><p>修改前</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723655.png" alt="image-20210701160319352"></p><p>修改后</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723724.png" alt="image-20210701160621081"></p><table><thead><tr><th>Status</th><th>Size</th><th>Size gzip</th></tr></thead><tbody><tr><td>修改前</td><td>735 kb</td><td>148 kb</td></tr><tr><td>修改后</td><td>23.6 kb</td><td>7.5 kb</td></tr></tbody></table><h3 id="form-1" tabindex="-1">Form <a class="header-anchor" href="#form-1" aria-hidden="true">#</a></h3><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723440.png" alt="image-20210629150959227"></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { Form } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;@ant-design/compatible&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="select" tabindex="-1">Select <a class="header-anchor" href="#select" aria-hidden="true">#</a></h3><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723054.png" alt="image-20210629151114045"></p><h4 id="_3-x" tabindex="-1">3.x <a class="header-anchor" href="#_3-x" aria-hidden="true">#</a></h4><p>我们会在 <code>Select.Option</code> 添加自定义属性，<code>onChange</code> 触发</p><p><code>function(value, option:Option | Array&lt;Option&gt;)</code></p><p>然后通过下面方式读取它</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#768390;">// &lt;Option type=&quot;1&quot; value=&quot;jack&quot;&gt;Jack&lt;/Option&gt;</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">type</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> option.props.type;</span></span>
<span class="line"></span></code></pre></div><p>option 返回的是 Option 实例</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261723688.png" alt="image-20210702181326512"></p><h4 id="_4-x" tabindex="-1">4.x <a class="header-anchor" href="#_4-x" aria-hidden="true">#</a></h4><p>返回类型是 option 而不是 Option 实例。请直接读取值，而不是从“props”。</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261724636.png" alt="image-20210702181721310"></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">type</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> option.type;</span></span>
<span class="line"></span></code></pre></div><h2 id="替换-moment-js" tabindex="-1">替换 Moment.js <a class="header-anchor" href="#替换-moment-js" aria-hidden="true">#</a></h2><blockquote><p>Q:：为什么要替换 Moment.js ？</p><p>A：最重要的是它高度基于 OOP API，这使得它无法使用 tree-shaking，从而导致巨大的包大小和性能问题。</p><p>Q:：为什么要选择 Day.js？</p><p>A：轻量化，大小仅 2KB，并且和 Moment.js API 保持一致，迁移成本低。</p></blockquote><p>官方提供了三种替换方案，我这里选择的是使用 <a href="https://github.com/ant-design/antd-dayjs-webpack-plugin" target="_blank" rel="noreferrer">antd-dayjs-webpack-plugin</a> 插件，因为它<strong>无需对现有代码做任何修改</strong>直接替换成 <code>Day.js</code>。</p><h3 id="webpack-config-js" tabindex="-1">webpack-config.js <a class="header-anchor" href="#webpack-config-js" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">AntdDayjsWebpackPlugin</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">require</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;antd-dayjs-webpack-plugin&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">module</span><span style="color:#ADBAC7;">.</span><span style="color:#6CB6FF;">exports</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// ...</span></span>
<span class="line"><span style="color:#ADBAC7;">  plugins: [</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">AntdDayjsWebpackPlugin</span><span style="color:#ADBAC7;">()],</span></span>
<span class="line"><span style="color:#ADBAC7;">};</span></span>
<span class="line"></span></code></pre></div><p>修改前</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261724556.png" alt="image-20210702180214217"></p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261724060.png" alt="image-20210702180234709"></p><p>修改后</p><p><img src="https://raw.githubusercontent.com/Jinyangava/blog-image/master/img/202112261724290.png" alt="image-20210702175606863"></p><table><thead><tr><th>Status</th><th>Size</th><th>Size gzip</th></tr></thead><tbody><tr><td>修改前</td><td>107 kb</td><td>35 kb</td></tr><tr><td>修改后</td><td>15.9 kb</td><td>5.7 kb</td></tr></tbody></table><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><blockquote><p><a href="https://ant.design/docs/react/migration-v4-cn" target="_blank" rel="noreferrer">https://ant.design/docs/react/migration-v4-cn</a></p><p><a href="https://ant.design/docs/react/replace-moment-cn" target="_blank" rel="noreferrer">https://ant.design/docs/react/replace-moment-cn</a></p><p><a href="https://github.com/you-dont-need/You-Dont-Need-Momentjs/blob/master/README.md" target="_blank" rel="noreferrer">https://github.com/you-dont-need/You-Dont-Need-Momentjs/blob/master/README.md</a></p></blockquote>`,42),r=[o,l,c];function i(d,g,h,y,m,b){return n(),e("div",null,r)}const D=s(p,[["render",i]]);export{A as __pageData,D as default};
